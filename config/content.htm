<h1>About</h1>
<p>此內容管理系統以 <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 作為 submodule 運作, 可以選定對應的版本運作, cmsimde 可以持續改版, 不會影響之前設為 submodule, 使用舊版 cmsimde 模組的內容管理相關運作.</p>
<h4>利用 cmsimde 建立靜態網誌方法:</h4>
<p>1. 在 github 建立倉儲, git clone 到近端</p>
<p>2. 參考 <a href="https://github.com/mdecourse/newcms">https://github.com/mdecourse/newcms</a>, 加入除了 cmsimde 目錄外的所有內容</p>
<p>以 git submodule add <a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> cmsimde</p>
<p>建立 cmsimde 目錄, 並從 github 取下子模組內容.</p>
<p>3.在近端維護時, 更換目錄到倉儲中的 cmsimde, 以 python wsgi.py 啟動近端網際伺服器.</p>
<p>動態內容編輯完成後, 以 generate_pages 轉為靜態內容, 以 git add commit 及 push 將內容推到遠端.</p>
<p>4. 之後若要以 git clone 取下包含 submodule 的所有內容, 執行:</p>
<p>git clone --recurse-submodules <a href="https://github.com/mdecourse/newcms.git">https://github.com/mdecourse/newcms.git</a></p>
<h1>環境設定</h1>
<h2>SSH</h2>
<h4>批次檔設定</h4>
<p>執行隨身碟 SciTE.exe ( 位於 201906_fall\data\wscite415\wscite 目錄下 )</p>
<p><span lang="zh-TW">開啟</span><span lang="zh-TW"><span face="Calibri"> start_mdecourse.bat 並加入</span></span></p>
<p lang="x-none" style="padding-left: 30px;">REM for putty</p>
<p lang="x-none" style="padding-left: 30px;">Set GIT_HOME=%Cdisk%:\portablegit\bin\</p>
<p lang="x-none" style="padding-left: 30px;">Set GIT_SSH=%Disk%:\putty\plink.exe</p>
<h4>SSH 設定</h4>
<p><span lang="zh-TW">到 </span><span lang="en-US">.ssh </span><span lang="zh-TW">的目錄下</span></p>
<p><span lang="zh-TW"></span><span lang="x-none"><span face="Microsoft JhengHei">編輯 </span></span><span lang="x-none">config,插入</span></p>
<p style="padding-left: 30px;"><span lang="en-US">P</span><span lang="x-none">roxy Command y:/putty/plink.exe github.com %h %p</span></p>
<p><span lang="x-none">並註解掉</span></p>
<p style="padding-left: 30px;"><span lang="x-none">IdentityFile "y:\home_mdecourse\.ssh\id_rsa"</span></p>
<p><span lang="x-none"><img caption="false" height="139" src="/images/SciTE_ssh_config.png" width="400"/></span></p>
<h4>設定 SSH key 的使用配置 ( 使用 Ipv 6 網路 )</h4>
<p>先下載 <a href="http://mde.tw/cp2019/content/USB%20%E7%A8%8B%E5%BC%8F%E7%B3%BB%E7%B5%B1.html">putty</a>  , 放到可攜系統的 data 目錄底下</p>
<h4>Key 轉換 ( 此設定方法是拿先前的 <span>Open SSH key</span> )</h4>
<p>先建立一個 key ( 若之前已經有 Open SSH 的 key 就可以直接用那把 key )</p>
<p>執行 puttygen.exe </p>
<p>載入一個 <span>Open SSH 的 key</span></p>
<p><img alt="" height="400" src="/images/puttygen_loadkey.png" width="398"/></p>
<p>*p.s.  若是使用之前的 key , bits 數請寄的設定為 4096 , 轉換成的類型請設定成 rsa </p>
<p>轉存成 rsa 的 prviate key ( ppk檔 )</p>
<p><img alt="" height="400" src="/images/puttygen_privatekey.png" width="398"/></p>
<h4>Putty 設定</h4>
<p>執行 putty.exe</p>
<p>建立一個 session 叫 github.com</p>
<p style="padding-left: 30px;">Host Name : github.com</p>
<p style="padding-left: 30px;">Port : 22</p>
<p style="padding-left: 30px;">Connection type : SSH</p>
<p><img alt="" height="400" src="/images/putty_set_session.png" width="401"/></p>
<p>設定 proxy </p>
<p style="padding-left: 30px;">Proxy type : HTTP</p>
<p style="padding-left: 30px;"><span>Proxy hostname :  [2001:288:6004:17::7]     Port : 3128</span></p>
<p style="padding-left: 30px;">Do DNS name lookup at proxy end :  Auto</p>
<p style="padding-left: 30px;">Username :  kmolab</p>
<p style="padding-left: 30px;">Password : kmolab</p>
<p><img alt="" height="400" src="/images/putty_set_proxy.png" width="401"/></p>
<p>設定 SSH 底下的 Auth</p>
<p style="padding-left: 30px;"><span lang="x-none">Private key file for authentication :  </span><span lang="en-US">( 請指定 rsa-</span><span lang="x-none">key </span><span lang="zh-TW">的位置 </span><span lang="en-US">)</span></p>
<p><span lang="en-US"><img alt="" height="400" src="/images/putty_set_ssh_auth.png" width="401"/></span></p>
<p><span lang="en-US">*p.s.  需指定 ppk 檔</span></p>
<p><span lang="en-US">儲存 session 設定</span></p>
<p><span lang="en-US"><img alt="" height="400" src="/images/putty_save.png" width="401"/></span></p>
<h2>Batch Command</h2>
<p>cad.bat<span>- 啟動 wsgi.py 並且在瀏覽器開啟 https 9443 動態網頁</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
y:
cd tmp\cad2019\cmsimde
start python wsgi.py | start chrome https://localhost:9443</pre>
<p><span> cadh.bat - 啟動 http-server 並且在瀏覽氣開啟 https 8444 靜態網頁</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
y:
cd tmp\cad2019\
start python http-server.py | start chrome https://localhost:8444</pre>
<p><span>cadg.bat - 啟動 gitextensions </span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">@echo off
Y:GitExtensions\gitextensions.exe  browse y:\tmp\cad2019\</pre>
<p><br/><br/></p>
<h1>Develop</h1>
<p><a href="https://github.com/mdecourse/cmsimde">https://github.com/mdecourse/cmsimde</a> 的開發, 可以在一個目錄中放入 cmsimde, 然後將 up_dir 中的內容放到與 cmsimde 目錄同位階的地方, 使用 command 進入 cmsimde 目錄, 執行 python wsgi.py, 就可以啟動, 以瀏覽器 https://localhost:9443 就可以連接, 以 admin 作為管理者密碼, 就可以登入維護內容.</p>
<p>cmsimde 的開發採用 Leo Editor, 開啟 cmsimde 目錄中的 cmsimde.leo 就可以進行程式修改, 結束後, 若要保留網際內容, 只要將 cmsimde 外部的內容倒回 up_dir 目錄中即可後續對 cmsimde 遠端倉儲進行改版.</p>
<p>init.py 位於  up_dir 目錄, 可以設定 site_title 與 uwsgi 等變數.</p>
<h1>Solvespace</h1>
<h2>Solvespace 編譯</h2>
<p>先將 Y:\portablegit\bin\sh.exe 改名為 sh_rename_for_solvespace.exe</p>
<p>re sh.exe sh_rename_for_solvespace.exe</p>
<p><span>*p.s.  re 是重新命名的指令</span></p>
<p><span>git version 查驗 git 版本 ( 需要git 2.13 版本以上 )</span></p>
<p><span>git clone --recurse-submodules https://github.com/solvespace/solvespace.git solvespace</span></p>
<p>*p.s. <span>使用  git clone </span><span>--recurse-submodules 取得所有子模組資料，clone 前請先確認</span></p>
<p><span>是否有重複檔名的資料，並耐心等候取得資料，以確保檔案完整性</span></p>
<p style="padding-left: 30px;">上述指令同:</p>
<p style="padding-left: 60px;">git clone <span><a href="https://github.com/solvespace/solvespace.git">https://github.com/solvespace/solvespace.git</a> </span></p>
<p style="padding-left: 60px;"><span>cd solvespace</span></p>
<p style="padding-left: 60px;"><span>git submodule init</span></p>
<p style="padding-left: 60px;"><span>git submodule update</span></p>
<p><span>編輯 Y:\tmp\solvespace\extlib\angle\CMakeLists.txt 將 713 行和 714行註解掉，像底下這樣</span></p>
<p><span>#list(APPEND ANGLE_DEFINITIONS<br/><span>#"-DANGLE_PRELOADED_D3DCOMPILER_MODULE_NAMES={ \"d3dcompiler_47.dll\", \"d3dcompiler_46.dll\", \"d3dcompiler_43.dll\" }")</span><br/><span>endif()</span></span></p>
<p>*p.s.  漏掉此步驟，否則後續編譯會有錯誤</p>
<p>到 <span>Y:\tmp\solvespace\extlib\libpng 目錄底下新建名為 build目錄</span></p>
<p>cd solvespace </p>
<p>cd extlib</p>
<p>cd libpng</p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p><span><span>重新命名 Y:\tmp\solvespace\extlib\libpng\build\libpng.dll.a 改名為 libpng_static.a 並且複製到 Y:\msys64\mingw64\lib</span></span></p>
<p><span><span>回到 Y:\tmp\solvespace 目錄下新建名為 build目錄</span></span></p>
<p>mkdir build</p>
<p>cd build</p>
<p>cmake .. -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE=Release</p>
<p>mingw32-make</p>
<p>完成以上編譯後執行 <span>Y:</span>tmp\solvespace\build\bin\solvespace.exe   ，若能成功執行就能確定完成 Solvespace 編譯</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/XmXqpvr044I" width="560"></iframe></p>
<hr/>
<p>W7</p>
<p>在about裡插入This is Solvespace compiled by 學號 (40723150)</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/3XM-JtnFDAw" width="560"></iframe></p>
<h2>Solvespace 操作</h2>
<h4>快捷指令介紹</h4>
<h5>幾何</h5>
<p style="padding-left: 30px;">S 直線</p>
<p style="padding-left: 30px;">R 矩形</p>
<p style="padding-left: 30px;">C 圓形</p>
<p style="padding-left: 30px;">P 點</p>
<p style="padding-left: 30px;">Shift+X 擠出</p>
<p style="padding-left: 30px;"><span>Shift+L 迴轉</span></p>
<h5>視角</h5>
<p style="padding-left: 30px;">W 正視 (指定或編輯面)</p>
<p style="padding-left: 30px;">F2 正視 (與螢幕最接近平行的工作面轉正)</p>
<p style="padding-left: 30px;">F3 等角</p>
<h5>約束指令</h5>
<p style="padding-left: 30px;">M 中心</p>
<p style="padding-left: 30px;">D 標註(直線)</p>
<p style="padding-left: 30px;">N 標註(角度)</p>
<p style="padding-left: 30px;">Q 等長</p>
<p style="padding-left: 30px;">H 水平</p>
<p style="padding-left: 30px;">V 垂直</p>
<p style="padding-left: 30px;">L 平行</p>
<p style="padding-left: 30px;">O 重合</p>
<p style="padding-left: 30px;">[ 垂直</p>
<p class="title style-scope ytd-video-primary-info-renderer"><yt-formatted-string class="style-scope ytd-video-primary-info-renderer" force-default-style="">Solvespace Tutorial #12</yt-formatted-string></p>
<p class="title style-scope ytd-video-primary-info-renderer"><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/o6bomCAH2gI" width="560"></iframe></p>
<hr/>
<p>W7</p>
<p>繪圖驗證 7</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/KbynRpoET_4" width="560"></iframe></p>
<p>繪圖驗證 10</p>
<p><iframe allowfullscreen="allowfullscreen" height="314" src="//www.youtube.com/embed/U6cAGaNZaQ0" width="560"></iframe></p>
<h2>STL</h2>
<p></p>
<p><iframe height="400" src="/downloads/cube.html" width="600"></iframe></p>
<h1>V-rep</h1>
<h1>Webots</h1>
<h4><span>Webots 啟動:</span></h4>
<p><span>執行路徑設定<br/></span></p>
<p><span>在 start_mdecourse_webots.bat 插入</span></p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">set path_webots=%Disk%:\Webots_2019b_rev1\msys64\mingw64\bin;%Disk%:\Webots_2019b_rev1\msys64\usr\bin
</pre>
<div></div>
<p>在 path 的最後面加入 %path_webots%</p>
<p><img caption="false" height="39" src="/images/webots_start.png" width="450"/></p>
<p>啟動指令:</p>
<p>在 y:\ 根目錄建立 start_webots.bat , 內容為</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">start Y:\Webots_2019b_rev1\msys64\mingw64\bin\webots.exe</pre>
<p>當隨身程式系統納入上述兩個條件並啟動後, 可以直接在命令列輸入 start_webots.bat 啟動</p>
<p>將 <a href="https://drive.google.com/file/d/1MolDH7kKJt_IIBTrKalsMfNWMrqqTWdt/view?usp=sharing">Webots_2019b_rev1.7z</a> 解壓縮後放在 data 目錄裡面</p>
<hr/>
<h4><span>Webots 終止</span></h4>
<p>在 stop.bat 插入</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">taskkill /IM webots.exe /F
</pre>
<p><img alt="" height="300" src="/images/webots_stop.png" width="261"/><img caption="false" height="0" src="/images/webots_stop.png" width="300"/></p>
<h1>NX</h1>
<h2>NX3</h2>
<h2>NX12</h2>
<p><a href="http://mde.tw/cad2019/downloads/NX-12-for-Engineering-Design.pdf">NX12 教材</a> 資料整理</p>
<h3>CH1 引言</h3>
<p>工程師現在使用 CAD、CAM 和 CAE 系統來進行自動化的設計和生產，現在這些系統每天被用在各種不同的工程任務。底下簡要說明如何<span>使用 CAD、CAM 和 CAE 來實現產品的過程。</span></p>
<p><span>1.1 產品實現過程</span></p>
<p style="padding-left: 30px;"><span>產品實現過程可以大致分為兩個階段：設計和製造。</span><span>設計過程從識別新客戶需求和待改進的設計變量開始，這些營銷變量在獲得客戶反饋後由市場營銷人員進行識別。收集了相關的設計信息，後可制定了設計規範。根據相關設計信息進行可行性研究，並進行詳細設計和分析。詳細設計包括設計概念，預期產品圖紙，草圖和幾何建模。分析包括應力分析，干涉檢查，運動學分析，質量特性計算和公差分析以及設計優化。從這些活動中獲得的結果的質量與分析的質量以及進行分析的工具直接相關。</span></p>
<p style="padding-left: 30px;"><span><br/>製造過程始於從生產計劃開始的車間活動，該活動使用設計過程圖並以實際產品結束。流程計劃包括生產計劃，材料採購和機器選擇等活動。在生產過程的各個階段，需要完成各種任務，例如購買新工具，NC 編程和質量檢查。流程計劃包括對產品製造中使用的所有流程的計劃。通過質量控制檢查的零件將經過功能測試，包裝，標記和運送給客戶。</span></p>
<p style="padding-left: 30px;"><img caption="false" height="350" src="/images/NX12_ch1_1.png" width="466"/></p>
<p style="padding-left: 30px;">上圖顯示了代表產品實現過程的圖表（Mastering CAD / CAM，由Ibrahim Zeid，McGraw Hill，2005年）</p>
<p><span>1.2  CAD / CAM 開發的簡要歷史</span></p>
<p style="padding-left: 30px;"><span>當前的 CAD / CAM 技術的起源可以追溯到文明古代，當時古埃及的工程師意識到了圖形通信。正交投影實踐今天是在1800年代發明的。 CAD / CAM 系統的真正開發始於 1950 年代。 CAD / CAM 在上個世紀經歷了四個主要的發展階段。</span></p>
<p style="padding-left: 30px;"><span>1950 年代被稱為交互式電腦圖形時代。麻省理工學院的伺服機構實驗室在三軸銑床上演示了數控（NC）的概念。發展歷程在這個時代，由於當時電腦的缺點而放慢了速度。在 1950 年代後期，開始了自動編程工具（APT）的開發，並探索了通用汽車公司互動圖形的潛力。</span></p>
<p style="padding-left: 30px;"><span>1960 年代是交互式電腦圖形學最關鍵的研究時期。Ivan Sutherland 開發了畫板系統，該系統演示了創建圖紙和在陰極射線管（CRT）上以交互方式進行對象交替。 CAD 一詞開始出現，「設計」一詞超越了基本的製圖概念。通用汽車宣布了他們的 DAC-1 系統和 Bell Technologies 推出了GRAPHIC 1 遠程顯示系統。</span></p>
<p style="padding-left: 30px;"><span>在 1970 年代期間，前十年在電腦圖形學方面的研究工作開始富有成果。按行業，政府和學術界，並且實現了交互式電腦圖形學在提高生產率方面的潛力。 1970 年代被描述為電腦製圖和專用儀器設計應用程序開始的黃金時代。國家計算機圖形協會（NCGA）成立，並且初始圖形交換規範（IGES）開始了。</span></p>
<p style="padding-left: 30px;"><span>在 1980 年代，新的理論和算法得到了發展，並且設計和製造的各種要素都得到了發展。主要的研發重點是擴大 CAD / CAM 系統超越了三維幾何設計，並提供了更多的工程應用。</span></p>
<p style="padding-left: 30px;"><span>現今 CAD / CAM 的開發側重於設計和製造中各種元素的高效，快速集成和自動化，以及新算法的開發。有許多可直接使用的商業 CAD / CAM 軟件包，它們非常易於使用並且非常友好。以下是當前市場中的一些商業軟件包。</span></p>
<ul style="list-style-type: circle;">
<li><span>Solid Edge、AutoCAD、Inventor 和 TurboCAD 是一些負擔得起的CAD軟件系統。</span></li>
<li><span>NX、Pro-E、CATIA 和 SolidWorks 是高端建模和設計軟體更昂貴但功能更強大的系統。這些軟體系統還具有電腦輔助的製造和工程分析功能。</span></li>
<li><span>Onshape 和 Fusion 360 是建立在雲端的 CAD 軟件，可通過用戶的瀏覽器提供CAD 功能。</span></li>
<li><span>ANSYS、ABAQUS、NASTRAN 和 COMSOL 是主要用於 CAE 。</span></li>
</ul>
<p><span>1.3 CAD/CAM/CAE 的定義</span></p>
<p style="padding-left: 30px;"><span>1.3.1 電腦輔助設計 – CAD</span></p>
<p style="padding-left: 60px;"><span>CAD 是與使用電腦系統來協助設計的創建、修改、分析和優化有關的技術。 任何體現電腦圖形學的電腦程序和在設計過程中促進工程功能的應用程序都可以歸類為 CAD 軟件。<br/>CAD 的最基本作用是定義設計的幾何形狀－機械零件、產品組裝、建築結構、電子電路、建築物佈局等。CAD 系統的最大好處是可以節省大量時間和精力。 減少因每次需要重新定義設計的幾何形狀而導致的錯誤。</span></p>
<p style="padding-left: 30px;"><span>1.3.2 電腦輔助製造 – CAM</span></p>
<p style="padding-left: 60px;"><span>CAM 技術涉及電腦系統的計畫、管理和控制，該電腦系統通過與工廠生產資源的電腦介面來的計畫、管理和控制製造操作。<br/>CAM 最重要的領域之一是數控（NC）。 這是一種使用編程指令來控制工具機的技術，該工具機利用切削、銑削、磨削、沖壓或將原料製成成品。 CAM的另一個重要功能是在機器人編程中。<br/>流程計劃也是電腦自動化的目標。</span></p>
<p style="padding-left: 30px;"><span>1.3.3 電腦輔助工程 – CAE</span></p>
<p style="padding-left: 60px;"><span>CAE 技術使用計算機系統來分析 CAD 創建的產品的功能，從而使設計人員可以模擬和研究產品的性能，從而可以優化和優化設計。<br/>CAE 工具可用於許多不同類型的分析。 例如，運動學分析程序可用於確定機構中的運動路徑和連桿速度。<br/>動態分析程序可用於確定複雜組件（例如汽車）中的載荷和位移。 最受歡迎的分析方法之一是使用有限元素方法（FEM）。 該方法可用於確定應力，變形，傳熱，磁場分佈，流體流動和其他連續場問題，而這些問題通常很難用任何其他方法解決。</span></p>
<p><span>1.4 教程範圍</span></p>
<p style="padding-left: 30px;"><span>本教程是為有興趣學習如何使用 NX 12 設計機械零部件的學生和工程師編寫的。學習使用 NX 12 也將很有價值學習如何使用其他 CAD 系統，例如 PRO-E 和CATIA。本教程提供了學習 NX 12 的系統方法。</span></p>
<ul style="list-style-type: circle;">
<li><span>第2章介紹了 NX 12 的基本知識，通過這章來練習基本功能（如打印、保存和退出）來熟悉 NX 12 佈局。它還給出了簡短的描述坐標系，圖層，各種工具箱和其他重要命令的詳細信息，將在後面的章節中使用。</span></li>
<li><span>第3章介紹了草圖的概念。它描述瞭如何創建草圖以及給出幾何和尺寸約束。本章非常重要，因為當今的組件的幾何形狀非常複雜，並且僅憑基本特徵很難建模。</span></li>
<li><span>從第4章開始是零件的實際設計和建模。它描述了不同的特徵，例如參考特徵、掃掠特徵和原始特徵，以及如何使用這些特徵。創建設計，對特徵執行各種特徵操作。</span></li>
<li><span>在第5章中學習如何從零件模型創建圖形。在本章中，我們將示範如何通過添加視圖，標註零件圖形的尺寸以及修改圖形中的各種屬性（例如文本大小、箭頭大小和公差）來創建圖紙。</span></li>
<li><span>第6章介紹了裝配建模的概念及其術語。它描述了 TopDown 建模和 Bottom-Up 建模。我們將使用自下而上的模型進行組裝<br/>組件變成產品。</span></li>
<li><span>第7章介紹了自由格式建模。將演示建模曲線和平滑表面的方法。</span></li>
<li><span>第8章簡要介紹了NX 12中用於有限元分析的設計仿真。</span></li>
<li><span>第9章是將設計的模型實施到加工環境中進行加工的實時經驗。 本章介紹刀具路徑的生成、驗證和仿真，以創建CNC（計算機數字代碼），以從多軸甚至先進的CNC機床生產設計零件。<br/>每章中使用的示例和練習題經過精心設計，最終將在本章中進行匯總。 由於這獨特功能，您應該保存在每一章中創建的所有模型。</span></li>
</ul>
<p><span></span></p><h3>CH2 入門</h3>
<p><span>2.1</span></p>
<p><span>2.2</span></p>
<p><span>2.3</span></p>
<p><span>2.4</span></p>
<p><span>2.5</span></p>
<p><span>2.6</span></p>
<h3>CH3 二維草圖</h3>
<p>3.1</p>
<p>3.2</p>
<p>3.3</p>
<p>3.4</p>
<p>3.5</p>
<p>3.6</p>
<h3>CH4 三維建模</h3>
<p>4.1</p>
<p>4.2</p>
<p>4.3</p>
<p>4.4</p>
<p>4.5</p>
<p>4.6</p>
<p>4.7</p>
<p>4.8</p>
<p>4.9</p>
<h3>CH5 出圖</h3>
<p>5.1</p>
<p>5.2</p>
<p>5.3</p>
<p>5.4</p>
<p>5.5</p>
<p>5.6</p>
<p>5.7</p>
<h3>CH6 組立</h3>
<p>6.1</p>
<p>6.2</p>
<p>6.3</p>
<p>6.4</p>
<p>6.5</p>
<p>6.6</p>
<h3>CH7 曲面建模</h3>
<p><span>7.1</span></p>
<p><span>7.2</span></p>
<p><span>7.3</span></p>
<h3>CH8 有限元素分析</h3>
<p><span>8.1</span></p>
<p><span>8.2</span></p>
<p><span>8.3</span></p>
<p><span>8.4</span></p>
<p><span>8.5</span></p>
<p><span>8.6</span></p>
<p><span>8.7</span></p>
<p><span>8.8</span></p>
<h3>CH9 加工模擬</h3>
<p><span>9.1</span></p>
<p><span>9.2</span></p>
<p><span>9.3</span></p>
<p><span>9.4</span></p>
<p><span>9.5</span></p>